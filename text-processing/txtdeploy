#!/bin/bash

#
# text_transform.sh -- take a directory with text and meta texts, and
# transform and deploy them
#

CURRENT_DIR=$(pwd)
SCRATCHDIR=$(mktemp -d -p "$CURRENT_DIR")
#STYLESHEET='/home/th/dev/tirsdag-text-factory/xsl/generator.xsl'
STYLESHEET='/home/th/dev/tekstnet-xsl/xsl/generator.xsl'
metadataxsl='/home/th/dev/tirsdag-text-factory/xsl/metatext.xsl'
dest='/home/th/dev/tirsdagsprojektet/content/books'
ext='.html'

export lang=da
export persons=true
export places=true

shopt -s extglob

while test $# -gt 0
  do
    case $1 in
    --all | -a )
      all=yes
      ;;
    --english | -e )
      ext='.en.html'
      export lang=en
      #usage_and_exit 0
      ;;
    --nopersons )
      # disable linking of personal names
      export persons=false
      #usage_and_exit 0
      ;;
    --noplaces )
      # disable linking of personal names
      export places=false
      #usage_and_exit 0
      ;;
    --help | -h )
      usage_and_exit 0
      ;;
    --version | -v )
      version
      exit 0
      ;;
    --test | -t )
      dest='/home/th/dev/dl_develop/content/books'
      #exit 0
      ;;
    -*)
      error "Unrecognized option: $1"
      ;;
    *)
      break
      ;;
    esac
  shift
done

transform() {
  #java -cp /usr/local/lib/saxon/saxon9he.jar net.sf.saxon.Transform \
  java -jar /usr/local/lib/saxon/saxon-he-11.6.jar \
      -s:"$1" \
      -xsl:"$STYLESHEET" \
      -o:"$SCRATCHDIR/tst.txt" \
      lang="$lang" \
      persons="$persons" \
      places="$places"
}

transform_meta() {
#java -cp /usr/local/lib/saxon/saxon9he.jar net.sf.saxon.Transform \
java -jar /usr/local/lib/saxon/saxon-he-11.6.jar \
      -s:"$1" \
      -xsl:"$metadataxsl" \
      -o:"$2" \
      lang="$lang"
}

# rename(){
#   # Rename xml files with html file extension
#   for file in "$SCRATCHDIR"/*.xml; do
#     fname="${file##*/}"                              # Remove path
#     mv -- "$file" "$SCRATCHDIR"/"${fname%.*}"/"${fname%.*}""${ext}"  # Remove file extension
#   done
# }

cleanup() {
  rm "$SCRATCHDIR/tst.txt"
    if [ -d "$dest/$*" ]
    then
      if test "$all" = "yes"
      then
      echo Full rsync of files to "$dest"/"$*"
      rsync -av "$SCRATCHDIR"* "$dest"/"$*"/
      else
        echo Partial rsync \(HTML and md files\) to "$dest"/"$*"
      rsync -av --include "$SCRATCHDIR"/*.{html,md} "$dest"/"$*"/
      fi
      else
    echo Making new directory "$dest"/"$*"
    mkdir -p "$dest"/"$*"
    cp -r "$SCRATCHDIR"/* "$dest"/"$*"
    fi
    rm -r "$SCRATCHDIR"
}

while IFS= read -r -d '' file
do
  # echo "lang is $lang"
  [ -e "$file" ] || continue
  if 
  [[ $file = *_int.xml ]] 
  then
    transform_meta "$file" "$SCRATCHDIR"/introduction.html
  elif
  [[ $file = *_acc.xml ]] 
  then 
    transform_meta "$file" "$SCRATCHDIR"/account.html
  elif
  [[ $file = *_pre.xml ]] 
  then 
    transform_meta "$file" "$SCRATCHDIR"/preface.html
  elif
  [[ $file = *_int.md ]] 
  then 
    cp "$file" "$SCRATCHDIR"/introduction.md
  elif
  [[ $file = *_acc.md ]] 
  then 
    cp "$file" "$SCRATCHDIR"/account.md
  elif
  [[ $file = *_pre.md ]] 
  then 
    cp "$file" "$SCRATCHDIR"/preface.md
  #elif
  #[[ $file = introduction ]]
  #then
  #  echo "int is found"
  #  cp -r "$file" "$SCRATCHDIR"
  else
    transform "$file"
  fi
done <  <(find "$@" -type f \( -name '*.xml' -o -name '*.md' \) -print0)
#done <  <(find "$@" -maxdepth 1 -type f \( -name '*.xml' -o -name '*.md' \) -o -type d \( -name 'introduction' -o -name 'account' \) -print0)


#cleanup "$@"

