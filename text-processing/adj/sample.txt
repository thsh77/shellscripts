This small text formatter is a nifty program for those of us who use text editors. It allows you to set the maximum line width and justify paragraphs and thus can be used to format mail messages or simple letters. The adj shell script does all the option setting, although it could have been done by reading ARGV in the BEGIN action. Using the shell to establish command-line parameters is probably easier for those who are already familiar with the shell. The lack of comments in the adj.awk script makes this script more difficult to read than some of the others. 


The BEGIN procedure assigns three regular expressions to variables: blankline , startblank , startwords . This is a good technique (one that you'll see used in lex specifications) because regular expressions can be difficult to read and the name of the variable makes it clear what it matches. Remember that modern awks lets you supply a regular expression as a string, in a variable. There are three main procedures, which can be named by the variable they match. The first is blankline , a procedure which handles collected text once a blank line is encountered. The second is startblank , which handles lines that begin with whitespace (spaces or tabs). The third is startwords , which handles a line of text. The basic procedure is to read a line of text and determine how many of the words in that line will fit, given the line width, outputting those that will fit and saving those that will not in the variable outline . When the next input line is read, the contents of outline must be output before that line is output. The adjust() function does the work of justifying the text based on a command-line option specifying the format type. All types except "l" (left-adjusted, right-ragged) need to be filled. 

Therefore, the first thing this function does is figure out how much "fill" is needed by subtracting the length of the current line from the specified line length. It makes excellent use of the sprintf() function to actually do the positioning of the text. For instance, to center text, the value of fill (plus 1) is divided by 2 to determine the amount of padding needed on each side of the line. This amount is passed through the fmt variable as the argument to sprintf() : docstore.mik.ua/orelly/unix/sedawk/ch13_05.htm
